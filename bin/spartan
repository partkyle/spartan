#!/usr/bin/env node

var connect = require('connect')
var assets  = require('connect-assets')
var fs      = require('fs')
var jade    = require('jade')
var path    = require('path')
var eco     = require('eco')

var port = 3000

var __cwd = process.cwd()

assets.jsCompilers.eco = {
  match: /\.jst.eco/,
  compileSync: function(sourcePath, source) {
    var fileName = path.basename(sourcePath, '.jst.eco')
    var directoryName = path.dirname(sourcePath).replace(__cwd + '/assets/js/', '')
    var jstPath = directoryName ? directoryName + '/' + fileName + '.eco' : fileName + '.eco'
    return [
      '(function() {',
      '  this.JST || (this.JST = {});',
      '  this.JST["' + jstPath + '"] = ' + eco.precompile(source),
      '}).call(this);'
    ].join('')
  }
}

var app = connect()
app.use(connect.favicon())
app.use(connect.logger('dev'))
app.use(assets())
app.use(function(req, res) {
  var filename = 'index.jade'
  fs.readFile(filename, 'utf8', function(err, data) {
    if (err) {
      console.log(err)
      return res.end('Problem with file: ' + filename)
    }

    var fn = jade.compile(data, this)

    res.end(fn())
  })
})

app.listen(port)
console.log('Listening on port %d', port)
